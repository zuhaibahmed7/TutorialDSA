package DSA;

import java.util.ArrayList;
import java.util.List;

public class SpiralMatrix {
	
		    public List<Integer> spiralOrder(int[][] matrix) {  
		    List<Integer> spiral = new ArrayList<>();

		    int top=0;
		    int bottom=matrix.length-1;
		    int left=0;
		    int right=matrix[0].length-1;

		    while(left<=right && top<=bottom){
		        for(int i=left; i<=right; ++i){
		            spiral.add(matrix[top][i]);
		        }
		        top++;
		         for(int i=top; i<=bottom; ++i){
		            spiral.add(matrix[i][right]);
		        }
		        right--;
		        if(top<=bottom){ 
		         for(int i=right; i>=left; --i){
		            spiral.add(matrix[bottom][i]);
		        }
		        bottom--;}

		        if(left<=right){ 
		         for(int i=bottom; i>=top; --i){
		            spiral.add(matrix[i][left]);
		        }
		        left++;}
		    }
		     return spiral;
		    }
		
	public static void main(String[] args ) {
		SpiralMatrix s = new SpiralMatrix();
		int matrix[][]={
	            { 1,  2,  3, 4},
	            { 5,  6,  7, 8 },
	            { 9, 10, 11, 12},
	            {13, 14, 15, 16}
	        };
		System.out.print(s.spiralOrder(matrix));
	}
}
